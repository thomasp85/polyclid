% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vert_stat.R
\name{approx_vert_normal}
\alias{approx_vert_normal}
\alias{approx_vert_normal.polyclid_polyline}
\alias{approx_vert_normal.polyclid_polygon}
\title{Calculate vertex normals of a polyline or polygon}
\usage{
approx_vert_normal(x, ...)

\method{approx_vert_normal}{polyclid_polyline}(x, ...)

\method{approx_vert_normal}{polyclid_polygon}(x, ...)
}
\arguments{
\item{x}{A \code{polyclid_polyline} or \code{polyclid_polygon} vector}

\item{...}{Arguments passed on to methods}
}
\value{
A \code{euclid_direction2} vector of normals matchng the vertices returned
by \code{\link[euclid:subgeometries]{euclid::vert()}}
}
\description{
This function allows you to retrieve the vertex normals (mean of normals from
the adjacent line segments). As this requires normalising the normals it
cannot be done exactle hence the \code{approx_} prefix. For polylines the normal
is oriented in the same way as it is for the individual segments, whereas for
polygons they are oriented outwards assuming a valid polygon.
}
\examples{
# Polylines
sine <- polyline(
  seq(0, 2*pi, length.out = 20),
  sin(seq(0, 2*pi, length.out = 20))
)
normals <- approx_vert_normal(sine)
normals

plot(sine)
euclid_plot(segment(vert(sine), as_vec(normals)))

# Polygons
poly <- polygon(
  c(0, 10, 10, 0, 1, 5, 1),
  c(0, 0, 10, 10, 1, 1, 5),
  hole_id = c(1, 1, 1, 1, 2, 2, 2)
)
normals <- approx_vert_normal(poly)
normals

plot(poly)
euclid_plot(segment(vert(poly), as_vec(normals)))

}
