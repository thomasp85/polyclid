% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygon_orientation.R
\name{reverse_orientation}
\alias{reverse_orientation}
\alias{is_clockwise}
\alias{is_counterclockwise}
\title{Polygon orientation}
\usage{
reverse_orientation(x)

is_clockwise(x)

is_counterclockwise(x)
}
\arguments{
\item{x}{A \code{polyclid_polygon} vector}
}
\value{
A new \code{polyclid_polygon} vector for \code{reverse_orientation()} and a
logical vector for \code{is_clockwise()} and \code{is_conterclockwise()}
}
\description{
Polygon rings can have two different orientations: clockwise and
counterclockwise. In a clockwise oriented polygon the polygon lies to the
right as you traverse the boundary in order, while the reverse is true for
a counterclockwise oriented polygon. Both orientations are basically valide
representations of a polygon but many algorithms assumes a certain
orientation of the boundary and holes in order to work. The outer boundary
must be counterclockwise and all holes must be clockwise. This will ensure
that the polygon always lies to the left as you traverse all the borders of
the polygon. \code{reverse_orientation()} reverses the orientation of both the
outer boundary and the holes. \code{is_clockwise()} and \code{is_counterclockwise()}
only reports the orientation of the outer boundary. To get the orientation
of a hole, first extract it with \code{\link[=hole]{hole()}}.
}
\examples{
poly <- polygon(
  c(0, 10, 10, 0),
  c(10, 10, 0, 0)
)

is_clockwise(poly)
poly <- reverse_orientation(poly)
is_counterclockwise(poly)

}
