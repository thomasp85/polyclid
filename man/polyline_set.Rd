% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polylineset.R
\name{polyline_set}
\alias{polyline_set}
\alias{is_polyline_set}
\alias{as_polyline_set}
\alias{n_polylines}
\title{Sets of polylines}
\usage{
polyline_set(polylines)

is_polyline_set(x)

as_polyline_set(x, ...)

n_polylines(x, simplify = FALSE)
}
\arguments{
\item{polylines}{A \code{polyclid_polygon} vector or a list of these. In the latter
case the union of the polygons in each vector is used for the set.}

\item{x}{A \code{polyclid_polyline_set} vector}

\item{...}{Arguments passed on}

\item{simplify}{Should the extracted polylines be simplified by joining lines
where possible}
}
\value{
a \code{polyclid_polygon_set} vector
}
\description{
A polyline set is a collections of interior disjoint x-monotone polylines. As
with \link{polygon_set} they are used as containers for the result of boolean
operations on polylines. As they are made up of disjoint polylines any
overlapping polylines will be cut at their intersection. The requirement for
x-monotonicity also means that a polyline may be split into several even if
it doesn't (self)intersect. polyline sets may give rise to polygons if they
have closed interior. These faces of the set can be extracted as polygons
using \code{\link[=as_polygon]{as_polygon()}}. Further, a polyline set can be thought of as a graph
structure with the end vertices of the polylines being nodes, and the
polylines being edges. The number of connections each node has can be
extracted with \code{vert_degree()} and its neighbors with \code{vert_neighbors()}.
Further the vertices that each polyline is associated with can be obtained
with \code{polyline_verts()}.
}
\examples{
sine <- polyline(
  seq(0, 2*pi, length.out = 20),
  sin(seq(0, 2*pi, length.out = 20))
)
loop <- polyline(
  c(0, 5, 6, 5, 0),
  c(-1, 1, 0, -1, 1)
)
ps <- polyline_set(c(sine, loop))

# Vertices are only defined for end points - not points interior to the
# polylines
euclid_plot(vert(ps))

# You can get back the polylines as they are represented or simplified by
# joining lines that meet at vertices with a degree of 2
plot(
  as_polyline(ps[2]),
  col = c("black", "red", "green", "blue")
)
plot(
  as_polyline(ps[2], simplify = TRUE),
  col = c("black", "red", "green", "blue")
)

# If a polyline_set defines a closed area, that can be extracted as a polygon
n_faces(ps)
as_polygon(ps)

# A polyline set can be seen as a graph and the relevant info can be obtained
vert_degree(ps[2])
vert_neighbors(ps[2])
polyline_verts(ps[2])

}
\seealso{
Other polylines: 
\code{\link{polyline}()}

Other sets: 
\code{\link{polygon_set}()}
}
\concept{polylines}
\concept{sets}
