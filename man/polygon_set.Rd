% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygonset.R, R/polylineset.R
\name{polygon_set}
\alias{polygon_set}
\alias{is_polygon_set}
\alias{as_polygon_set}
\alias{n_polygons}
\alias{locate_polygon}
\alias{n_faces}
\alias{vert_degree}
\alias{vert_neighbors}
\alias{polyline_verts}
\title{Sets of polygons}
\usage{
polygon_set(polygons)

is_polygon_set(x)

as_polygon_set(x, ...)

n_polygons(x)

locate_polygon(x, location)

n_faces(x)

vert_degree(x)

vert_neighbors(x)

polyline_verts(x)
}
\arguments{
\item{polygons}{A \code{polyclid_polygon} vector or a list of these. In the latter
case the union of the polygons in each vector is used for the set.}

\item{x}{A \code{polyclid_polygon_set} vector}

\item{...}{Arguments passed on}

\item{location}{A \code{euclid_point2} vector giving locations}
}
\value{
a \code{polyclid_polygon_set} vector
}
\description{
A polygon set is a collections of disjoint polygons with holes.
Their main use is as intermediary representations during boolean operations
and other operations that may result in more than one polygon. A polygon set
is always valid as the polygons that are used during construction are
validated beforehand. It is important to note that a polygon set created from
two or more polygons may be topologically different from the polygons as they
will be merged if they touch or overlap (effectively taking the union of
them).
}
\examples{
# Polygon sets are created from polygons
rects <- as_polygon(euclid::iso_rect(
  euclid::point(0:1, 0),
  euclid::point(1:2, 1)
))
circs <- as_polygon(euclid::circle(euclid::point(c(0, 2), 1), 0.3))

ps <- polygon_set(c(rects, circs))
plot(ps, col = "grey")

# If a list of polygons are provided, the polygons in each element are
# combined into one polygon set
ps <- polygon_set(list(rects, circs))
plot(ps, col = c("grey", "red"))

# As can be seen, the two rects have been merged as they were touching at the
# edge

# You can get the number of polygons contained in a set as well as convert it
# back into polygons
n_polygons(ps)
as_polygon(ps)

# You can also extract a specific polygon from a set
as_polygon(ps, which = 1)

# Alternatively by specifying a point to locate the polygon to get
locate_polygon(ps, euclid::point(2, 1))

# When using boolean operations on polygons (or polygon sets) the result is a
# polygon set
p_sym_dif <- symmetric_difference(rects, circs)
plot(p_sym_dif, col = c("grey", "red"))
}
\seealso{
Other polygons: 
\code{\link{polygon}()}

Other sets: 
\code{\link{polyline_set}()}
}
\concept{polygons}
\concept{sets}
