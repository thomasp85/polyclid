% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygon.R
\name{polygon}
\alias{polygon}
\alias{is_polygon}
\alias{as_polygon}
\title{Vector of polygons}
\usage{
polygon(..., id = NULL, hole_id = NULL)

is_polygon(x)

as_polygon(x, ...)
}
\arguments{
\item{...}{Vector of points, numerics, or a list. See the \emph{Constructors}
sections}

\item{id}{An integer vector of the same length as \code{points}, dividing the
points into separate polygons (only used if \code{points} is a point vector)}

\item{hole_id}{An integer vector of the same length as \code{points}, dividing
the points into boundary and separate holes (only used if \code{points} is a point
vector).}

\item{x}{An object convertible to a polygon vector or a polygon vector}
}
\value{
An \code{polyclid_polygon} vector
}
\description{
A polygon is a set of points defining the boundary of a region. A polygon can
contain one or more holes. They must be fully contained inside the outer
boundary.
}
\section{Constructors}{

\itemize{
\item Providing a 2D points vector and no \code{id} and \code{holes_id} will construct a
single polygon with no holes
\item Providing a 2D points vector and an \code{id} vector will create a vector of
polygons with no holes
\item Providing a 2D points vector and a \code{holes_id} vector will construct a single
polygon with holes
\item Providing a 2D points vector, an \code{id} vector, and a \code{holes_id} vector will
construct a vector of polygons with holes
\item For all above, instead of a 2D point vector the x and y coordinates can be
supplied directly
\item Providing a list of 2D point vectors will construct a vector of polygons
with no holes
\item Providing a list of list of 2D point vectors will construct a vector of
polygons with holes
}

Further, polygons can also be constructed from 2D segments and triangles
using the \code{as_polygon()} function.
}

\examples{
points <- euclid::point(
  c(1, 0, -1, -0.5, 0.5),
  c(0, 1, 0, -1, -1)
)

# Construct a single polygon from a vector of points
poly <- polygon(points)
poly

plot(poly, col = "grey")

# Or directly from x and y coordinates
poly <- polygon(
  c(1, 0, -1, -0.5, 0.5),
  c(0, 1, 0, -1, -1)
)

# Use id to split points into multiple polygons
poly <- polygon(points[c(1, 2, 3, 4, 5, 1)], id = rep(1:2, each = 3))
poly
plot(poly, col = "grey")

# Use a list of lists to define polygons with holes
poly <- polygon(list(
  list(
    points,
    euclid::point(c(0, 0.5, -0.5), c(0.5, -0.5, -0.5))
  )
))
plot(poly, col = "grey")

# or use hole_id to similar effect (same polygon as above)
poly2 <- polygon(
  c(points, euclid::point(c(0, 0.5, -0.5), c(0.5, -0.5, -0.5))),
  hole_id = c(1, 1, 1, 1, 1, 2, 2, 2)
)
poly == poly2

# Equality of polygons doesn't care about where on the ring the vertices start
poly <- polygon(points)
poly2 <- polygon(points[c(2:5, 1)])
poly == poly2

# It cares about orientation though
poly == reverse_orientation(poly)

# This have implications for unqiue and duplicated
polys <- c(poly, poly2, reverse_orientation(poly))
unique(polys)
duplicated(polys)

}
\seealso{
Other polygons: 
\code{\link{polygon_set}()}
}
\concept{polygons}
